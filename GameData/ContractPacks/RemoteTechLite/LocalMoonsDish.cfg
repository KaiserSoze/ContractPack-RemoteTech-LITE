// Contract for setting up a satellite for the moons.
//   Author: Kaiser

CONTRACT_TYPE:NEEDS[RemoteTech]
{
    name = RT_LocalMoonDish

    title = RemoteTech: Point some dishes at @/moonTarget
    description = We'd like you to point a satellite at @/moonTarget so we can start sending some probes that way!
    synopsis = Point a dish at @/moonTarget!
    completedMessage = We've got a signal bouncing back, good job!

    group = RemoteTech

    // Level 1 prestige
    prestige = Trivial

    // The satellite is launch in Homeworld orbit - so it's a Homeworld contract
    targetBody = HomeWorld()

    // Always offered by the R&D department
    agent = Research & Development Department

	maxSimultaneous = 1

    // Contract rewards
	rewardReputation = Random(5, 15)
    rewardFunds = @advanceFunds * 2
    advanceFunds = Random(20000, 25000)
	failureFunds = @advanceFunds * 1.25
	failureReputation = @rewardReputation*1.5
	
    weight = 2.0
    
	DATA
    {
        type = CelestialBody
        requiredValue = true
        moonTarget = @/targetBody.Children().Random()
    }
	
    PARAMETER
    {
        name = MunSat
        type = VesselParameterGroup

        disableOnStateChange = false

        PARAMETER
        {
            name = KSCConnectivity
            type = KSCConnectivity
        }

        PARAMETER
        {
            name = ReachState
            type = ReachState

            situation = ORBITING
        }

        PARAMETER
        {
            name = HasAntenna
            type = HasAntenna

            title = Point a Dish at at @/moonTarget

            disableOnStateChange = false

            antennaType = Dish
            targetBody = @/moonTarget
        }

            
    } 
		
	PARAMETER
	{
		name = CelestialBodyCoverage
		type = CelestialBodyCoverage

		coverage = 0.20 
		targetBody = @/moonTarget
		rewardScience = @/rewardScience / 3.0
        rewardReputation = @/rewardReputation / 3.0
        rewardFunds = @/rewardFunds / 3.0
		
	}

    PARAMETER
    {
        name = Duration
        type = Duration

        duration = 2d

        preWaitText = Testing time after network up
        waitingText = Performing shake-out testing
        completionText = Shake-out testing completed
    }

    REQUIREMENT
	{
		name = CelestialBodyCoverage
		type = CelestialBodyCoverage

		targetBody = @/moonTarget

		minCoverage = 0.0
		maxCoverage = 0.2
	}

  

    REQUIREMENT
   {
        name = PartModuleTypeUnlocked
        type = PartModuleTypeUnlocked

        partModuleType = Antenna
    }
	REQUIREMENT
    {
        name = AnyShortDish
        type = Any

        REQUIREMENT
        {
            name = PartUnlocked
            type = PartUnlocked

            part = RTShortDish1
        }

        REQUIREMENT
        {
            name = PartUnlocked
            type = PartUnlocked

            part = RTShortDish2
        }
    }
}
