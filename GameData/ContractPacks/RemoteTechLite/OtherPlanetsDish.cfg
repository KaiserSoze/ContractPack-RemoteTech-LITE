// Contract for setting up a dish pointing at other planets
//   Author: Kaiser

CONTRACT_TYPE:NEEDS[RemoteTech]
{
    name = RT_OtherPlanetsDish

    title = RemoteTech: Point some dishes at @/planetTarget
    description = Recently we have begun the study of @/planetTarget. But is very hard to track from the space center. We'd like you to point a satellite at it. That way we can send probes to @/planetTarget someday!
    synopsis = Point a dish at @/planetTarget!
    completedMessage = We've got a signal bouncing back, good job!

    group = RemoteTech

    // Level 1 prestige
    prestige = Trivial

    // The satellite is launch in Homeworld orbit - so it's a Homeworld contract
    targetBody = HomeWorld()

    // Always offered by the R&D department
    agent = Research & Development Department


	
	maxSimultaneous = 1

    // Contract rewards
	rewardReputation = Random(5, 15)
    rewardFunds = @advanceFunds * 2
    advanceFunds = Random(25000, 35000)
	failureFunds = @advanceFunds * 1.25
	failureReputation = @rewardReputation*1.5
	
    weight = 2.0
    
	

	DATA
	{
		type= int
		//@/targetBody.Parent().Children().Count()
		planetIndex = Random(0,@/targetBody.Parent().Children().Count())
	}
	DATA
    {
        type = CelestialBody
        requiredValue = true
        planetTarget = @/targetBody.Parent().Children().ElementAt(@/planetIndex)
    }
	
    PARAMETER
    {
        name = MunSat
        type = VesselParameterGroup

        disableOnStateChange = false

        PARAMETER
        {
            name = KSCConnectivity
            type = KSCConnectivity
        }

        PARAMETER
        {
            name = ReachState
            type = ReachState

            situation = ORBITING
        }

        PARAMETER
        {
            name = HasAntenna
            type = HasAntenna

            title = Point a Dish at at @/planetTarget

            disableOnStateChange = false

            antennaType = Dish
            targetBody = @/planetTarget
        }

            
    } 
		
	PARAMETER
	{
		name = CelestialBodyCoverage
		type = CelestialBodyCoverage

		coverage = 0.20 
		targetBody = @/planetTarget
		rewardScience = @/rewardScience / 3.0
        rewardReputation = @/rewardReputation / 3.0
        rewardFunds = @/rewardFunds / 3.0
		
	}

    PARAMETER
    {
        name = Duration
        type = Duration

        duration = 2d

        preWaitText = Testing time after network up
        waitingText = Performing shake-out testing
        completionText = Shake-out testing completed
    }

    REQUIREMENT
	{
		name = CelestialBodyCoverage
		type = CelestialBodyCoverage

		targetBody = @/planetTarget
		//Not offer it if it is already pointed.
		minCoverage = 0.0
		maxCoverage = 0.2
	}

   REQUIREMENT
    {
        name = CelestialBodyCoverage
        type = CelestialBodyCoverage

        targetBody = HomeWorld()
		//First cover home
       // minCoverage = 0.7
        maxCoverage = 1.0
    }
	REQUIREMENT
	{
	//At least have long dish
	name = LongDish
	type = Any
		REQUIREMENT
		{
			name = PartUnlocked
			type = PartUnlocked

			part = RTLongDish1
		}

		REQUIREMENT
		{
			name = PartUnlocked
			type = PartUnlocked

			part = RTLongDish2
		}
	}
	REQUIREMENT
    {
        name = AnyDish1
        type = Any
		REQUIREMENT
		{
			name = Expression
			type = Expression

			//If planet is closer (jool is planet index 5 in stock)
			expression = @/planetIndex < 5
		}
		REQUIREMENT
		{
			//If we planet i jool or farther away gigadish is required
			name = GigaDishs
			type = Any
			REQUIREMENT
			{
				name = PartUnlocked
				type = PartUnlocked

				part = RTGigaDish1
			}

			REQUIREMENT
			{
				name = PartUnlocked
				type = PartUnlocked

				part = RTGigaDish2
			}
		}
    }
	
    REQUIREMENT
   {
        name = PartModuleTypeUnlocked
        type = PartModuleTypeUnlocked

        partModuleType = Antenna
    }
}
